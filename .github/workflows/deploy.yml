name: Build and Deploy ICP Canister

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERSION: ${{ github.sha }}
  PACKAGE: "frontend"
  DFX_VERSION: "0.26.1"
  DFX_WARNING: "-mainnet_plaintext_identity"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          targets: wasm32-unknown-unknown
          override: true

      - name: Install PocketIC server
        uses: dfinity/pocketic@main
      - name: Confirm successful installation
        run: $POCKET_IC_BIN --version

      - name: Install dfx
        uses: dfinity/setup-dfx@main
        with:
          version: ${{ env.DFX_VERSION }}
          install-dfxvm: true
          install-dfx: true

      - name: Setup dfx environment
        run: |
          source "$HOME/.local/share/dfx/env"
          dfxvm install ${{ env.DFX_VERSION }}
          dfxvm default ${{ env.DFX_VERSION }}
          dfx --version

      - name: Prepare Frontend Build
        run: |
          source "$HOME/.local/share/dfx/env"
          mkdir -p .dfx/local/canisters/frontend
          cp src/frontend/assetstorage.did .dfx/local/canisters/frontend/

      - name: Build Frontend
        run: |
          source "$HOME/.local/share/dfx/env"
            # Create necessary directories
            mkdir -p $GITHUB_WORKSPACE/wasm
            cd $GITHUB_WORKSPACE/src/frontend
            npm install
            # Build the frontend assets
            npm run build
            # Create the frontend canister
            cd $GITHUB_WORKSPACE
            dfx canister create frontend --network ic || true
            # Build the frontend canister
            dfx build frontend --network ic
            # Copy the wasm file to the wasm directory
            cp .dfx/ic/canisters/frontend/frontend.wasm.gz $GITHUB_WORKSPACE/wasm/frontend.wasm.gz

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FRONTEND_PACKAGE }}_${{ github.sha }}
          path: wasm/frontend.wasm.gz
          if-no-files-found: error

      - name: Prepare Deployment
        run: |
          mkdir -p wasm
          mkdir -p src/frontend/dist

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.FRONTEND_PACKAGE }}_${{ github.sha }}
          path: wasm

      - name: Deploy Frontend
        uses: ./.github/actions/deploy
        with:
          identity: ${{ secrets.IC_IDENTITY }}
          canister_name: ${{ env.FRONTEND_PACKAGE }}
          network: ic
          wasm_file: wasm/frontend.wasm.gz

      
          


      